
prometheusOperator:
  createCustomResource: true # or false if ctd already installed

# Create default rules for monitoring the cluster
defaultRules:
  create: true
  rules:
    alertmanager: true
    etcd: false
    general: true
    k8s: true
    kubeApiserver: true
    kubeApiserverError: true
    kubePrometheusNodeAlerting: true
    kubePrometheusNodeRecording: true
    kubernetesAbsent: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeScheduler: false
    network: true
    node: true
    prometheus: true
    prometheusOperator: true
    time: true

grafana:
  grafana.ini:
    server:
      root_url: http://grafana-k8s.fr
      disable_login_form: false
    smtp:
      enabled: false
    auth.google:
      enabled: false
  adminPassword: admin
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: 'true'
    hosts:
      - grafana-k8s.fr
    tls:
      - hosts:
          - grafana-k8s.fr
        secretName: grafana-tls
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 10Gi
  deploymentStrategy:
    type: Recreate

prometheus:
  prometheusSpec:
    storageSpec:
      volumeClaimTemplate:
        spec:
          resources:
            requests:
              storage: 10Gi
          accessModes:
            - ReadWriteOnce

alertmanager:
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          resources:
            requests:
              storage: 5Gi
          accessModes:
            - ReadWriteOnce

kubelet:
  enabled: true
  namespace: kube-system
  serviceMonitor:
    https: true

kubeControllerManager:
  enabled: false
kubeEtcd:
  enabled: false
kubeScheduler:
  enabled: false
kubeProxy:
  enabled: false
